/*! confug - v0.0.0
 *  Release on: 2014-07-31
 *  Copyright (c) 2014 Cory Mawhorter
 *  Licensed MIT */
"use strict";!function(a){var b=this;"function"==typeof define&&define.amd?define([],function(){return a(b)}):"undefined"!=typeof exports?module.exports=a(b):b.confug=a(b)}(function(a){var b,c=["string",typeof!0,"number"],d=/^[a-z][\w\d]+$/,e=[{name:"development",abbrev:"dev"},{name:"testing",abbrev:"test"},{name:"staging",abbrev:"stage"},{name:"production",abbrev:"prod"}],f={},g=[],h={singleton:!0,fallbackGlobal:!0,nestedEnv:!0,stages:null,consts:null,initial:null,env:null,overwrites:null};"undefined"!=typeof a&&(f="object"==typeof a.process&&"object"==typeof a.process.env?a.process.env:"object"==typeof a.env?a.env:a),b=function(a,b){var c,d,l={};"undefined"!=typeof b||"object"!=typeof a||a instanceof j||(b=a,a=null);for(d in h)l[d]=h[d];if("object"==typeof b)for(d in b){if(!1===h.hasOwnProperty(d))throw new Error('Confug Error - Invalid confug option "'+d+'"');l[d]=b[d]}if(null===k.STAGE&&i(l.stages||e),a=a,!0===l.fallbackGlobal&&(a=a||f.NODE_ENV||f.CLIENT_ENV||f.ENV),a instanceof j||(a=k.STAGE[a]||k.STAGE.production),!0===l.singleton&&g.length>0)for(var m=0;m<g.length;m++){var n=g[m];if(n.env===a){if("undefined"!=typeof b)throw new Error("Confug Error - Cannot pass options when a config has already been created");return n}}return c=new k(a,l),!0===l.singleton&&g.push(c),c};var i=b.initStages=function(a){if(null!==k.STAGE)throw new Error("Confug Error - Stages have already been initlaized");if("object"!=typeof a||"undefined"==typeof a.length)throw new Error("Confug Error - Invalid stage names.  Expecting array of stages.");for(var b={},c=function(a){return function(){return this.env===a}},e=0;e<a.length;e++){var f,g=a[e];if(f="object"==typeof g?new j(g.name||g[0],g.abbrev||g[1]):new j(g),b[f.name]=f,"undefined"!=typeof k.prototype[f.abbrev])throw new Error('Confug Error - Invalid stage abbreviation "'+f.abbrev+'": Collision');if(!d.test(f.abbrev))throw new Error('Confug Error - Invalid stage abbreviation "'+f.abbrev+'": Bad characters');k.prototype[f.abbrev]=c(f)}k.STAGE=b};b.util={env:function(a,b){if(b instanceof Error&&"undefined"==typeof f[a])throw b;return f[a]||b}};var j=b.Stage=function(a,b){this.name=a,this.abbrev=b||a};j.prototype.toString=function(){return this.name};var k=b.Config=function(a,b){if("object"!=typeof a&&"undefined"!=typeof a&&(a=k.STAGE[a]),"undefined"==typeof a)throw new Error("Confug Error - Environment required");if(b=b||{},"object"!=typeof b)throw new Error("Confug Error - Invalid options");this.env=a,this._values={},this._consts=b.consts||{},this._extend(this._consts,!0),this._extend(b.initial),null!==b.env&&"object"==typeof b.env&&this._extend(!0===b.nestedEnv?b.env[this.env.name]||b.env[this.env.abbrev]:b.env),this._extend(b.overwrites)};return k.prototype._validType=function(a){return!1!==c.indexOf(typeof a)},k.prototype._extend=function(a,b){if(null!==a&&"object"==typeof a){for(var c in a){if(!this._validType(a[c]))throw new Error('Confug Error - Type "'+typeof a[c]+'" not supported in config');(!0===b||"undefined"==typeof this._consts[c])&&(this._values[c]=a[c])}return a}},k.prototype.get=function(a,b){if("undefined"==typeof a)return this._values;if("string"==typeof a&&"undefined"!=typeof this._values[a])return this._values[a];var c,d={},e=0,f=a instanceof RegExp;!1===f&&":"!==a[a.length-1]&&(a+=":"),c=a.length;for(var g in this._values){var h=g;f?!0===a.test(g)&&(b||(h=g.replace(a,"")),d[h]=this._values[g],e++):0===g.indexOf(a)&&(b||(h=g.substr(c)),d[h]=this._values[g],e++)}return 0===e?void 0:d},k.prototype.is=function(a){if("string"==typeof a)return this.env.name===a;if(a instanceof j)return this.env.name===a.name;if("object"==typeof a&&"undefined"!=typeof a.length){for(var b=0;b<a.length;b++)if(this.is(a[b]))return!0;return!1}throw new Error("Confug Error - Invalid lookup environments specified")},k.STAGE=null,b});